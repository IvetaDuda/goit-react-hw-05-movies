{"version":3,"file":"static/js/452.40bb22ea.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/Title/Title.module.css?a947","components/Title/Titile.jsx","pages/Home/Home.jsx","server/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"film__list\":\"MoviesList_film__list__uRSgm\",\"filmCard__wrap\":\"MoviesList_filmCard__wrap__xkctP\",\"film__image\":\"MoviesList_film__image__J25aD\",\"info\":\"MoviesList_info__5zfGK\",\"info__title\":\"MoviesList_info__title__UmOdn\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.film__list}>\n      {films.map(({ id, original_title, poster_path, original_name }) => {\n        const imgPoster = 'https://image.tmdb.org/t/p/w500' + poster_path;\n        return (\n          <li key={id} className={css.filmCard__wrap}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                className={css.film__image}\n                src={imgPoster}\n                alt={original_title}\n              />\n            </Link>\n            <div className={css.info}>\n              {original_title ? (\n                <h2 className={css.info__title}>{original_title}</h2>\n              ) : (\n                <h2 className={css.info__title}>{original_name}</h2>\n              )}\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__mrNq5\"};","import css from './Title.module.css';\n\nconst Titile = () => {\n  return <h1 className={css.title}>Trending today</h1>;\n};\nexport default Titile;\n","import { useState, useEffect } from 'react';\nimport api from '../../server/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport MoviesList from 'components/MoviesList';\nimport Title from 'components/Title';\n\nconst Home = () => {\n  const [movies, setMovie] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        api.fetchTrendingMovie().then(data => setMovie(data.results));\n      } catch (error) {\n        toast.error(error.message);\n      }\n    })();\n  }, []);\n\n  return (\n    <div>\n      <Title />\n      <MoviesList films={movies} />\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n};\nHome.prototype = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n      original_name: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'c38a13f755f1c1fdbaffd32cebe7bc69';\n\nasync function fetchSearchFilms(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}`\n  );\n  return response.data;\n}\n\nasync function fetchTrendingMovie() {\n  const response = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return response.data;\n}\n\nasync function fetchDetailsMovie(movieId) {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n}\n\nasync function fetchCastActors(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nasync function fetchReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n\nconst api = {\n  fetchSearchFilms,\n  fetchTrendingMovie,\n  fetchDetailsMovie,\n  fetchCastActors,\n  fetchReviews,\n};\nexport default api;\n"],"names":["films","location","useLocation","className","css","map","id","original_title","poster_path","original_name","imgPoster","to","state","from","src","alt","Home","useState","movies","setMovie","useEffect","api","then","data","results","error","toast","message","MoviesList","autoClose","prototype","PropTypes","axios","KEY","fetchSearchFilms","query","response","fetchTrendingMovie","fetchDetailsMovie","movieId","fetchCastActors","fetchReviews","movie_id"],"sourceRoot":""}